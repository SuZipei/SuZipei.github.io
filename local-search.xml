<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/project/2023/01/15/hello-world/"/>
    <url>/project/2023/01/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>temp</title>
    <link href="/project/2022/07/11/temp/"/>
    <url>/project/2022/07/11/temp/</url>
    
    <content type="html"><![CDATA[<p>$WTH$ 获得了一个柱状图,这个柱状图一共有 $N$ 个柱子,最开始第 $i$ 根柱子的高度为 $x_i$ ,他现在要将这个柱状图排成一个屋顶的形状,屋顶的定义如下: </p><!-- more --><ol><li>屋顶存在一个最高的柱子,假设为 $i$ ,最终高度为 $h_i$ .它是所有柱子之中最高的. </li><li>第 $j$ 根柱子的高度为 $h_j=h_i-|i-j|$ ,但这个高度必须大于 $0$ ,否则就是不合法的. </li></ol><p>$WTH$ 可以对一个柱子做的操作只有将其高度加一或减一, $WTH$ 正忙着享受自己的人赢生活于是他将把这个柱状图变成屋顶的任务交给了你.你需要求出最少进行多少次操作才能够把这个柱状图变成一个屋顶形状. </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> #<span class="hljs-keyword">define</span> ll long long </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> db double const db delt=0.881;</span><br><span class="hljs-type">const</span> db eps=<span class="hljs-number">1e-15</span>; <br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1e5</span>+<span class="hljs-number">10</span>; <br><span class="hljs-type">int</span> n,h[N]; <br>ll ansx,ansy,ans; <br><span class="hljs-function">ll <span class="hljs-title">calc</span><span class="hljs-params">(ll hmx,<span class="hljs-type">int</span> idx)</span></span>&#123; <br>    ll res=<span class="hljs-number">0</span>; <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123; <br>        res+=<span class="hljs-built_in">abs</span>(h[i]-hmx+<span class="hljs-built_in">abs</span>(i-idx)); <br>        <span class="hljs-keyword">if</span>(hmx-<span class="hljs-built_in">abs</span>(i-idx)&lt;=<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0x7fffffffffff</span>; <br>    &#125; <br>    <span class="hljs-keyword">return</span> res; <br>&#125; <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">sa</span><span class="hljs-params">()</span></span>&#123; <br>    db T=<span class="hljs-number">5000</span>; <br>    <span class="hljs-keyword">while</span>(T&gt;eps)&#123; <br>        ll x=ansx+(<span class="hljs-number">2</span>*<span class="hljs-built_in">rand</span>()-RAND_MAX)*T; <br>        ll y=ansy+(<span class="hljs-number">2</span>*<span class="hljs-built_in">rand</span>()-RAND_MAX)*T; <br>        y=(y%n+n)%n+<span class="hljs-number">1</span>; <br>        ll tmp=<span class="hljs-built_in">calc</span>(x,y); <br>        ll k=tmp-ans; <br>        <span class="hljs-keyword">if</span>(k&lt;<span class="hljs-number">0</span>||<span class="hljs-built_in">exp</span>(-k/T)*RAND_MAX&gt;<span class="hljs-built_in">rand</span>())&#123; <br>            ansx=x;ansy=y;ans=tmp; <br>        &#125; <br>        T*=delt; <br>    &#125; <br>&#125; <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123; <br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n); <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123; <br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;h[i]); <br>        ansx+=h[i]; <br>    &#125; <br>    ansy=n&gt;&gt;<span class="hljs-number">1</span>; <br>    ans=<span class="hljs-built_in">calc</span>(ansx,ansy); <br>    <span class="hljs-built_in">sa</span>();<span class="hljs-built_in">sa</span>();<span class="hljs-built_in">sa</span>();<span class="hljs-built_in">sa</span>(); <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\\n&quot;</span>,ans); <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125; <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
